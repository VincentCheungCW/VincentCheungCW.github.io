<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>2019年我最喜欢的电影（一）</title>
    <url>/2020/favFilms2019-1/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><meta name="referrer" content="no-referrer" />

<br/>

<p>¹「宠儿」 The Favourite</p>
<p>导演: 欧格斯·兰斯莫斯<br>国家: 爱尔兰/英国/美国</p>
<p>年度最佳观影体验之一，绝对有趣的电影。<br>「龙虾」导演的新作，讲述了安妮女王的绣榻野史，近年最好的古装片，三位女主角给出了绝佳的表演。加上伦勃朗式的光影，幽默的对白和章回体结构，夸张的造型，怪异的配乐，合力制造出这一部风格独绝的英宫剧。</p>
<a id="more"></a>

<br/>

<p>²「地球最后的夜晚」</p>
<p> 导演: 毕赣<br> 国家: 中国 / 法国</p>
<p> 年度最佳观影体验之三，「路边野餐」技术大升级。<br> 看完「地球最后的夜晚」之后我又重刷一遍「路边野餐」，「路」真的怎么夸都不为过，它的惊艳程度对我而言甚至大于贾樟柯的「小武」。「地」复用了「路」的故事结构和想法，大体上只是一次技术升级，它的创意和表达反而是不及「路」的。本片带给我好的体验主要来自它令人激动的配乐和摄影，此外，文本上与「路」的呼应也似乎令前作更加完整。毕赣仍然是年轻一代中最有可能成为大师的那个，希望他在下部作品中跳出凯里。</p>
 <br/>

<p>³「此房是我造」 The House That Jack Built</p>
<p>  导演: 拉斯·冯·提尔<br>  国家: 丹麦/法国/德国/瑞典</p>
<p>  园子温的电影偶像是拉斯·冯·提尔，两位都是鬼才怪才，当然拉斯·冯·提尔更具文学性。该片极为成功地塑造了一位连环杀手形象，故事大胆到只有拉斯·冯·提尔会这样拍。最后的十几分钟结尾有点拖后腿，不然就是神作。</p>
  <br/>

<p>⁴「不留痕迹」 Leave No Trace</p>
<p> 导演: 黛布拉·格兰尼克<br> 国家: 美国</p>
<p> 反常规反套路的叙事。绝不交待来龙去脉，只关注于事件造成的影响。这是一部会呼吸的影片，细节丰富，讲道理绝不靠说教。小女主表演非常有灵气。</p>
 <br/>

<p>⁵「幸福的拉扎罗」 Lazzaro felice</p>
<p> 导演: 阿莉切·罗尔瓦赫尔<br> 国家: 意大利/瑞士/法国/德国</p>
<p> 很高级的一部影片，但这种高级主要来自于电影文本。拉扎罗会成为一个永恒的艺术形象。</p>
 <br/>

]]></content>
      <categories>
        <category>电影</category>
      </categories>
      <tags>
        <tag>2019</tag>
        <tag>电影</tag>
      </tags>
  </entry>
  <entry>
    <title>2019年我最喜欢的电影（二）</title>
    <url>/2020/favFilms2019-2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><meta name="referrer" content="no-referrer" />

<br/>

<p>¹「罗马」 Roma</p>
<p> 导演: 阿方索·卡隆<br> 国家: 墨西哥/美国</p>
<p> 年度最佳观影体验之二，细腻流畅的女性主义史诗。<br> 很“侯孝贤”的一部电影，镜头语言无懈可击。关于故事怎样讲得平淡克制又暗涌澎湃，阿方索·卡隆给出了很好的示范。他的前作「地心引力」是我认为近十年最好的太空科幻电影，而「罗马」很可能帮他再次拿下奥斯卡最佳导演，果真如此的话，将是“墨西哥三杰”近6年内第5次喜提奥斯卡。</p>
 <br/>
 
<a id="more"></a>

<p>²「燃烧」 버닝</p>
<p> 导演: 李沧东<br> 国家: 韩国</p>
<p> 刘亚仁的表演是这部影片的精华所在，他的特写镜头的丰富意涵包含甚至超越了影片中所有对阶级意识或虚无主义的暗示。</p>
 <br/>

<p>³「佛罗里达乐园」 The Florida Project</p>
<p>  导演：肖恩·贝克<br>  国家：美国</p>
<p>  实际是2017年的电影，2018年才看到。如果与「小偷家族」二选一的话我会毫不犹豫地选这一部，该片饱含着「小偷家族」所缺少的那种生命力。</p>
  <br/>

<p>⁴「绿皮书」 Green Book</p>
<p> 导演: 彼得·法雷利<br> 国家: 美国</p>
<p> 又名“蒂凡尼男孩”哈哈。该片剧本是好莱坞叙事技巧的绝佳范例。阿里很可能凭本片连庄奥斯卡最佳男配。</p>
 <br/>

<p>⁵「巴斯特·斯克鲁格斯的歌谣」 The Ballad of Buster Scruggs</p>
<p> 导演: 伊桑·科恩 / 乔尔·科恩<br> 国家: 美国</p>
<p> 科恩兄弟的短篇小说集，六个短片，有荒诞可笑也有悲酸无奈，高开低走，好在最后一个故事收得不错。</p>
 <br/>

]]></content>
      <categories>
        <category>电影</category>
      </categories>
      <tags>
        <tag>2019</tag>
        <tag>电影</tag>
      </tags>
  </entry>
  <entry>
    <title>2019 年度精选歌单</title>
    <url>/2020/music2019/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="2019-年度精选歌单"><a href="#2019-年度精选歌单" class="headerlink" title="2019 年度精选歌单"></a>2019 年度精选歌单</h3>
    <div id="aplayer-KAAUTYHl" class="aplayer aplayer-tag-marker meting-tag-marker"
         data-id="3159878612" data-server="netease" data-type="playlist" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#555" data-volume="0.4"
    ></div>

]]></content>
      <categories>
        <category>音乐</category>
      </categories>
      <tags>
        <tag>2019</tag>
        <tag>歌单</tag>
        <tag>音乐</tag>
        <tag>收藏</tag>
      </tags>
  </entry>
  <entry>
    <title>音乐剧 Hamilton punchlines</title>
    <url>/2020/HamiltonPunchlines/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="读-Hamilton-剧本的摘录"><a href="#读-Hamilton-剧本的摘录" class="headerlink" title="读 Hamilton 剧本的摘录"></a>读 Hamilton 剧本的摘录</h2><hr>
<br/>

<blockquote>
<p>A voice saying<br>“Alex, you gotta fend for yourself.”</p>
</blockquote>
<a id="more"></a>

<br/>

<blockquote>
<p>In New York you can be a new man</p>
</blockquote>
<br/>

<blockquote>
<p>When America sings for you<br>Will they know what you overcame?<br>Will they know you rewrote the game?<br>The world will never be the same, oh</p>
</blockquote>
<br/>

<blockquote>
<p>Talk less<br>Smile more<br>Don’t let them know what you’re against or what you’re for</p>
</blockquote>
<br/>

<blockquote>
<p>I am not throwing away my shot!</p>
</blockquote>
<br/>

<blockquote>
<p>I may not live to see our glory!<br>But I will gladly join the fight!</p>
</blockquote>
<br/>

<blockquote>
<p>Raise a glass to freedom<br>Something they can never take away</p>
</blockquote>
<br/>

<blockquote>
<p>There’s nothin’ like summer in the city<br>Someone in a rush next to someone lookin’ pretty</p>
</blockquote>
<br/>

<blockquote>
<p>Look around, look around at how<br>Lucky we are to be alive right now!</p>
</blockquote>
<br/>

<blockquote>
<p>History is happening in Manhattan and we just happen to be<br>In the greatest city in the world!</p>
</blockquote>
<br/>

<blockquote>
<p>You say<br>The price of my love’s not a price that you’re willing to pay</p>
</blockquote>
<br/>


<blockquote>
<p>the elephant is in the room</p>
</blockquote>
<br/>

<blockquote>
<p>Love doesn’t discriminate<br>Between the sinners<br>And the saints</p>
</blockquote>
<br/>

<blockquote>
<p>Death doesn’t discriminate<br>Between the sinners<br>And the saints</p>
</blockquote>
<br/>

<blockquote>
<p>But I’m not afraid<br>I know who I married</p>
</blockquote>
<br/>

<blockquote>
<p>Let me tell you what I wish I’d known<br>When I was young and dreamed of glory:<br>You have no control:<br>Who lives, who dies, who tells your story</p>
</blockquote>
<br/>

<blockquote>
<p>Hercules Mulligan, I need no introduction<br>When you knock me down I get the fuck back up again!</p>
</blockquote>
<br/>

<blockquote>
<p>Oh Philip, you outshine the morning sun</p>
</blockquote>
<br/>

<blockquote>
<p>You won’t be an ocean away<br>You will only be a moment away</p>
</blockquote>
<br/>

<blockquote>
<p>There’s nothing like summer in the city<br>Someone under stress meets someone looking pretty</p>
</blockquote>
<br/>

<blockquote>
<p>I hope this letter finds you in good health</p>
</blockquote>
<br/>

<blockquote>
<p>hate the sin, love the sinner</p>
</blockquote>
<br/>

<blockquote>
<p>Smells like new money, dresses like fake royalty</p>
</blockquote>
<br/>

<blockquote>
<p>Like the scripture says:<br>“Everyone shall sit under their own vine and fig tree<br>And no one shall make them afraid.”</p>
</blockquote>
<br/>

<blockquote>
<p>“You have married an Icarus<br>He has flown too close to the sun.”</p>
</blockquote>
<br/>

<blockquote>
<p>There are moments that the words don’t reach<br>There is suffering too terrible to name</p>
</blockquote>
<br/>

<blockquote>
<p>Best of wives and best of women</p>
</blockquote>
<br/>
]]></content>
      <categories>
        <category>音乐</category>
      </categories>
      <tags>
        <tag>音乐</tag>
        <tag>收藏</tag>
        <tag>音乐剧</tag>
        <tag>艺术</tag>
      </tags>
  </entry>
  <entry>
    <title>音乐剧Hamilton剧本</title>
    <url>/2021/HamiltonPlay/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="音乐剧-Hamilton-剧本"><a href="#音乐剧-Hamilton-剧本" class="headerlink" title="音乐剧 Hamilton 剧本"></a>音乐剧 Hamilton 剧本</h2><br/>

<blockquote>
<p>Hamilton 的剧本，我自己做的标注</p>
</blockquote>
<a id="more"></a>

<br/>

<h4 id="在线预览："><a href="#在线预览：" class="headerlink" title="在线预览："></a>在线预览：</h4>

	<div class="row">
    <embed src="../../../resource/hamilton.pdf" width="100%" height="550" type="application/pdf">
	</div>





<br/>

<h4 id="下载："><a href="#下载：" class="headerlink" title="下载："></a>下载：</h4><p><a href="https://shikamaru-go.gitee.io/resource/hamilton.pdf">Hamilton.pdf</a></p>
]]></content>
      <categories>
        <category>音乐</category>
      </categories>
      <tags>
        <tag>音乐</tag>
        <tag>收藏</tag>
        <tag>音乐剧</tag>
        <tag>艺术</tag>
      </tags>
  </entry>
  <entry>
    <title>Something True</title>
    <url>/2020/about/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote>
<p>现居北京。</p>
</blockquote>
<blockquote>
<p>后端开发工程师，主修 Java ，辅修 Python、Go ，会点 React。</p>
</blockquote>
<a id="more"></a>

<blockquote>
<p>电脑DIY入门级爱好者，组装过 Hackintosh。</p>
</blockquote>
<blockquote>
<p>电影发烧友。</p>
</blockquote>
<blockquote>
<p>爱听 Hiphop 和 R&amp;B。</p>
</blockquote>
<blockquote>
<p>喜欢一切美好的事物。</p>
</blockquote>
<br/>

<p>豆瓣： <a href="https://www.douban.com/people/59143830/">蒋鹿丸</a><br>GitHub： <a href="https://github.com/VincentCheungCW">VincentCheungCW</a></p>
<br/>


<!-- ![avatar.jpg](https://i.loli.net/2019/12/02/Hw5WJIMKzi1YrU8.jpg) -->

<img src="https://tva1.sinaimg.cn/large/008eGmZEgy1gnhogd2xtej30k10k1abb.jpg" alt="avatar" width="300" style="border-radius:50%"/>]]></content>
  </entry>
  <entry>
    <title>Day00 - 初识Python</title>
    <url>/2021/python00/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><meta name="referrer" content="no-referrer" />

<h2 id="初识Python"><a href="#初识Python" class="headerlink" title="初识Python"></a>初识Python</h2><center>
    <img style="border-radius: 0.3125em;zoom: 80%;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);" 
    src="https://tva1.sinaimg.cn/large/0081Kckwgy1gkhtk5rq3cj30dw04474e.jpg">
    <br>
    <div style="color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;">Python的logo是双头蛇</div>
</center>

<a id="more"></a>


<hr>
<br/>

<h3 id="谁创造了Python？"><a href="#谁创造了Python？" class="headerlink" title="谁创造了Python？"></a>谁创造了Python？</h3><p>Python的创始人为Guido van Rossum，当时他在阿姆斯特丹的荷兰数学和计算机科学研究学会工作。1989年的圣诞节期间，Guido为了打发时间而创造了Python。新编程语言之所以命名为Python，是因为他是BBC电视剧——<a href="https://movie.douban.com/subject/1485976/"><code>Monty Python&#39;s Flying Circus</code></a>的忠实粉丝。</p>
<center>
    <img style="border-radius: 0.3125em;zoom: 60%;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);" 
    src="https://tva1.sinaimg.cn/large/008eGmZEly1gnjntwxibuj30z20lsb29.jpg">
    <br>
    <div style="color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;color: #999;padding: 2px;">
    荷兰人Guido
    </div>
</center>

<p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gnjntwxibuj30z20lsb29.jpg" alt="荷兰人Guido">{:width=”400px”}</p>
<img src="https://tva1.sinaimg.cn/large/008eGmZEly1gnjntwxibuj30z20lsb29.jpg" width="400px" >

<br/>

<div class="douban-card-block">
	<a class="douban-card" href="https://movie.douban.com/subject/1485976">
		<div class="douban-card-bgimg" style="background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/photo/s_ratio_poster/public/p2254037897.jpg');"></div>
		<div class="douban-card-left">
			<div class="douban-card-img" style="background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/photo/s_ratio_poster/public/p2254037897.jpg');"></div>
		</div>
		<div class="douban-card-right">
			<div class="douban-card-item"><span>电影名: </span><strong>巨蟒剧团之飞翔的马戏团第一季MontyPython&#39;sFlyingCircusSeason1(1969)</strong></div>
			<div class="douban-card-item"><span>导演: </span><span>约翰·霍华德·戴维斯/伊恩·迈克纳顿</span></div>
			<div class="douban-card-item"><span>主演: </span><span>格雷厄姆·查普曼/约翰·克立斯</span></div>
			<div class="douban-card-item"><span>上映时间: </span><span></span></div>
			<div class="douban-card-item"><span>评分: </span><span>9.4</span></div>
		</div>
	</a>
</div>
<style>
	.douban-card-block {
		display: flex;
		justify-content: center;
		align-items: center;
		width: 100%;
		max-height: 400px;
	}
	.douban-card {
		display: flex;
		margin: 30px 10px;
		padding: 15px;
		border-radius: 10px;
		position: relative;
		justify-content: center;
		align-items: center;
		overflow: hidden;
		color: antiquewhite;
		text-decoration: none;
	}
	.douban-card:hover {
		text-decoration: none;
	}
	.douban-card-bgimg {
		position: absolute;
		width: 115%;
		height: 115%;
		filter: blur(15px) brightness(0.6);
		background-size: 100%;
		background-position: center;
		background-repeat: no-repeat;
	}
	.douban-card-img {
		position: relative;
		height: 130px;
		width: 80px;
		background-size: 100%;
		background-position: center;
		background-repeat: no-repeat;
	}
	.douban-card-img {
		position: relative;
		height: 130px;
		width: 80px;
	}
	.douban-card-left {
		position: relative;
		display: flex;
		flex-direction: column;
		align-items: center;
	}
	.douban-card-right {
		position: relative;
		display: flex;
		flex-direction: column;
		margin-left: 12px;
		font-size: 16px;
		font-family: 'Courier New', Courier, monospace;
		line-height: 1.3;
		color: antiquewhite;
	}
	.douban-card-item {
		margin-top: 4px;
	}
</style>

<br/>

<p>Python 第一个公开版发行于 1991 年。Python 3.0于2008年12月3日发布，它对语言做了较大修订而不能完全后向兼容。</p>
<p>2020 年 1 月 1 日，官方宣布 停止 Python 2 的更新，Python2会逐步被Python3替代。</p>
<p><strong>Python 越来越火爆</strong></p>
<p>在2007年、2010年和2018年Python三次被选为年度编程语言。自从2003年，Python始终位列<a href="https://www.wikiwand.com/en/TIOBE_Programming_Community_Index">TIOBE </a>前十最流行编程语言榜单。最新的排名（2020年11月），Python已冲到第二名的位置（居于C之后，Java之前）。</p>
<hr>
<br/>

<h3 id="Life-is-short-use-Python-…-for-what"><a href="#Life-is-short-use-Python-…-for-what" class="headerlink" title="Life is short, use Python … for what?"></a>Life is short, use Python … for what?</h3><ol>
<li><strong>Web 应用开发</strong></li>
</ol>
<p>Python 在 Web 开发领域被广泛使用，产生了 <strong>Django</strong>、<strong>Flask</strong>、<strong>Tornado</strong> 等 Web 开发框架。得益于其简洁的语法和动态语言特性，Python 的开发效率很高，因而深受创业团队的青睐。</p>
<p>一些将 Python 作为主要开发语言的知名互联网企业：</p>
<ul>
<li>豆瓣</li>
<li>知乎</li>
<li>Instagram</li>
</ul>
<ol start="2">
<li><strong>网络爬虫</strong></li>
</ol>
<p>泛指从互联网采集数据。尽管很多语言都可以编写爬虫，但灵活的 Python 无疑也是当前的首选。基于 Python 的爬虫框架 <strong>Scrapy</strong> 也很受欢迎。</p>
<p>这个星球上最大的“爬虫”公司 – <strong>Google</strong> 一直力推 Python，不仅在公司内部大量使用 Python，也为开发社区做了巨大贡献。就连 Python 之父 <strong>Guido van Rossum</strong> 也曾在 Google 工作七年。</p>
<ol start="3">
<li><strong>数据分析</strong></li>
</ol>
<p>当通过爬虫获取了海量数据之后，需要对数据进行清洗、去重、存储、展示、分析，在这方面 Python 有许多优秀的类库：<strong>NumPy</strong>、<strong>Pandas</strong>、<strong>Matplotlib</strong>， 可以让你的数据分析工作事半功倍。</p>
<ol start="4">
<li><strong>人工智能</strong></li>
</ol>
<p>Python 在人工智能领域内的<strong>数据挖掘</strong>、<strong>机器学习</strong>、<strong>神经网络</strong>、<strong>深度学习</strong>等方面都是主流的编程语言，得到广泛的支持和应用。</p>
<hr>
<br/>

<h3 id="Python好在哪？"><a href="#Python好在哪？" class="headerlink" title="Python好在哪？"></a>Python好在哪？</h3><p>Python 是一种兼具 <em>简单</em> 与 <em>功能强大</em> 的编程语言。Guido给Python的定位是<strong>优雅</strong>、<strong>明确</strong>、<strong>简单</strong>，所以Python程序看上去总是简单易懂，初学者学Python，不但入门容易，而且将来深入下去，可以编写那些非常复杂的程序。</p>
<ul>
<li>简单、易学 – Python 是一种代表极简主义思想的语言。它使你专注于解决问题而非拘泥于语法与结构。</li>
<li>免费、开源 – 这是为什么 Python 如此优秀的原因之一——它是由一群希望看到一个更加优秀的 Python 的人创造并经常改进着的。</li>
<li>丰富的类库 – Python 标准库已经很庞大，但除了标准库以外，还有许多其他高质量的第三方库，如 wxPython、Twisted 和 Python 图像库等等。</li>
<li>规范的代码 – Python 采用强制缩进的方式使得代码具有极佳的可读性。</li>
</ul>
<p>总的来说，Python的哲学就是简单优雅，尽量写容易看明白的代码，尽量写少的代码。如果一个资深程序员向你炫耀他写的晦涩难懂、动不动就几万行的代码，你可以尽情地嘲笑他。</p>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>学习</tag>
        <tag>编程</tag>
      </tags>
  </entry>
  <entry>
    <title>Day01 - 本地安装Python</title>
    <url>/2021/python01/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><meta name="referrer" content="no-referrer" />

<h2 id="Day-1-Python-的安装"><a href="#Day-1-Python-的安装" class="headerlink" title="Day 1   Python 的安装"></a>Day 1   Python 的安装</h2><p>因为Python是跨平台的，也就是说它可以运行在Windows、Mac和各种Linux/Unix系统上。在Windows上写的Python程序，放到Linux上也是能够运行的。要开始学习Python编程，首先就得把Python安装到你的电脑里。安装后，你会得到Python解释器（就是负责运行Python程序的），一个命令行交互环境，还有一个简单的集成开发环境。这里我们安装的是 3.9.0 版本的Python。</p>
<a id="more"></a>

<p>建议大家直接去官网下载最新版本的安装包，官网地址：<a href="https://www.python.org/">https://www.python.org/</a>。也可以用我提供给大家的安装包，安装包的位置：tools/necessary。</p>
<hr>
<h3 id="1、windows-系统下安装配置"><a href="#1、windows-系统下安装配置" class="headerlink" title="1、windows 系统下安装配置"></a>1、windows 系统下安装配置</h3><p>windows 系统对应的安装包名字为python-3.9.0.exe，下载完后，双击进入下图安装页面，记得勾上Add Python 3.9 to PATH，然后点 「Install Now」 即可完成安装。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/2136918-2bf6591f0a12e80b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Python安装.png"></p>
<h4 id="验证是否安装成功"><a href="#验证是否安装成功" class="headerlink" title="验证是否安装成功"></a>验证是否安装成功</h4><p>安装完成后，打开命令提示符（即cmd.exe），敲入 python ，出现Python版本信息，证明 Python 安装成功了。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/2136918-817c22f802e8cfce.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="运行python.png"></p>
<p>命令提示符最后一行 <code>&gt;&gt;&gt;</code> 表示我们已经在 Python 交互环境中了，可以输入任何 Python 代码，回车后会立刻得到执行结果，试着输入下面代码，然后按回车看看吧。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">print (100 / 3.1415926)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<h3 id="2、Mac-系统下安装配置"><a href="#2、Mac-系统下安装配置" class="headerlink" title="2、Mac 系统下安装配置"></a>2、Mac 系统下安装配置</h3><p>Mac系统安装Python就更简单了，安装包名字为python-3.9.0-macosx10.9.pkg，双击安装即可。</p>
<p>这里还有另外一种方法，如果你安装了Homebrew，直接通过命令<code>brew install python3</code>安装即可。（如果你没有读懂这句话，说明你不需要它）</p>
<h4 id="验证是否安装成功-1"><a href="#验证是否安装成功-1" class="headerlink" title="验证是否安装成功"></a>验证是否安装成功</h4><p>安装完成后，打开终端.app（或者iTerm），敲入 <code>python3</code> ，出现Python版本信息，证明 Python 安装成功了。</p>
<p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gnkpi1g3dlj31ky0ciacn.jpg" alt="运行python.png"></p>
<p>注意：终端里输入<code>python</code>得到的是macOS系统预装的Python 2.7.16 版本，输入<code>python3</code>才会进入我们安装的版本。</p>
<p>Python2已经是过时的版本，而macOS之所以预装了这个版本，是为了兼容一些历史软件。我们一般使用Python3。</p>
<p><img src="https://tva1.sinaimg.cn/large/008eGmZEly1gnkpcw31i7j31ky0l2tcr.jpg" alt="macOS 预装了 Python2"></p>
<p>这样我们输入<code>python3</code>后就进入 Python 交互环境中了，可以输入任何 Python 代码，回车后会立刻得到执行结果，试着输入下面代码，然后按回车看看吧。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">print (&quot;玉在椟中求善价，钗于奁内待时飞。&quot;)</span><br><span class="line"></span><br></pre></td></tr></table></figure>


<p>这样我们的Python环境就搭建完成了，第一个 Python 程序也成功运行了，是不是很简单。</p>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>学习</tag>
        <tag>编程</tag>
      </tags>
  </entry>
</search>
